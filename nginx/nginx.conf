# RTMP stream configuration

stream {
    # Change {AMS_ORIGIN1_IP} and {AMS_ORIGIN2_IP} with your origin Ant Media Server instances.    
    upstream stream_backend {
        {{RTMP_SERVER_BLOCKS}}
        #you can add more instances in the following format
        #server {AMS_ORIGIN1_IP}:1935;
    }
    
    server {
        listen        1935;
        proxy_pass    stream_backend;
        proxy_timeout 3s;
        proxy_connect_timeout 1s;
    }

# RTMPS support
 
#ssl-disabled   server {
#ssl-disabled        listen 1936 ssl;
#ssl-disabled        proxy_pass stream_backend;
#ssl-disabled        ssl_certificate /etc/letsencrypt/live/{{YOUR_DOMAIN}}/fullchain.pem;
#ssl-disabled        ssl_certificate_key /etc/letsencrypt/live/{{YOUR_DOMAIN}}/privkey.pem;
#ssl-disabled    }

#SRT Support

    upstream srt_stream_backend {
        {{ORIGIN_SRT_SERVER_BLOCKS}}
        #you can add more instances in the following format
        #server {AMS_ORIGIN1_IP}:4200;
    }
    server {
        listen 4200 udp;
        proxy_pass srt_stream_backend;
    }    
}

user nginx;
worker_processes auto;
pid /var/run/nginx.pid;
worker_rlimit_nofile 1048576;

events {
    worker_connections 1048576;
    multi_accept on;
    use epoll;
}

# Change {AMS_ORIGIN1_IP} and {AMS_ORIGIN2_IP} with your origin Ant Media Server instance addresses  
http {
      #Ant Media Origin
      upstream antmedia_origin {
      least_conn;
      {{ORIGIN_SERVER_BLOCKS}}
      {{ORIGIN_SERVER_BLOCKS_BACKUP}}
       #server {AMS_ORIGIN1_IP}:5080;
    }

# Change {AMS_EDGE1_IP} and {AMS_EDGE2_IP} with your origin Ant Media Server instance addresses  
    #Ant Media Edge
    upstream antmedia_edge {
      least_conn;
      {{EDGE_SERVER_BLOCKS}}
      {{EDGE_SERVER_BLOCKS_BACKUP}}
      #server {AMS_EDGE1_IP}:5080;
    }

# Dashboard upstream setting. 
    # Use 4444 port number to login to Dashboard. You can add Origin and Edge servers. 
    upstream antmedia_dashboard {
      ip_hash;
      {{ORIGIN_SERVER_BLOCKS}}
      {{EDGE_SERVER_BLOCKS}}
      #server {AMS_EDGE1_IP}:5080;
      #server {AMS_ORIGIN1_IP}:5080;
    }


    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;
    keepalive_timeout 300s;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ssl settings
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # logs settings
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"'
                      '"$hostname" "upstream: $upstream_addr"';
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # gzip
    gzip on;
    gzip_disable "msie6";
    gzip_http_version 1.1;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/javascript application/x-javascript text/xml application/xml application/xml+rss application/vnd.ms-fontobject application/x-font-ttf font/opentype font/x-woff image/svg+xml image/x-icon;

    # proxy settings
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_read_timeout 10s;
    proxy_send_timeout 10s;
    proxy_connect_timeout 10s;
    
    map $arg_target $origin_backend {
        default         antmedia_origin;
        edge            antmedia_edge;
    }
    
    map $arg_target $edge_backend {
        default         antmedia_edge;
        origin          antmedia_origin;
    }
     
    #80 and #443 ports go to origin group
    #5080 and 5443 ports go to edge group
    server {
        listen 80 default_server;
        server_name _;
        
        #redirect all http requests to https if ssl is enabled
#ssl-disabled        return 301 https://$host$request_uri;

		 #fallback if ssl is not enabled
        location / {
			proxy_pass http://$origin_backend;
            proxy_http_version 1.1;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
		}
    }  
    
     # 5080 and 5443 ports go to edge group
    server {
        listen 5080;
        server_name _;
         #redirect all http requests to https if ssl is enabled
#ssl-disabled        return 301 https://$host:5443$request_uri;

        #fallback if ssl is not enabled
		location / {
			proxy_pass http://$edge_backend;
			proxy_http_version 1.1;
			proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
			proxy_read_timeout 7d;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $host;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";
		}
     
     }  

    #Origin Configuration
    #Change {{YOUR_DOMAIN}} with your fully qualified domain name. 
    #80 and #443 ports go to origin group
#ssl-disabled    server {
#ssl-disabled            listen 443 ssl;
#ssl-disabled            ssl_certificate /etc/letsencrypt/live/{{YOUR_DOMAIN}}/fullchain.pem;
#ssl-disabled            ssl_certificate_key /etc/letsencrypt/live/{{YOUR_DOMAIN}}/privkey.pem;
#ssl-disabled            server_name {{YOUR_DOMAIN}};
#ssl-disabled
#ssl-disabled            location / {
#ssl-disabled                proxy_pass http://$origin_backend;
#ssl-disabled                proxy_http_version 1.1;
#ssl-disabled                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#ssl-disabled                proxy_set_header Host $host;
#ssl-disabled                proxy_set_header Upgrade $http_upgrade;
#ssl-disabled                proxy_set_header Connection "Upgrade";
#ssl-disabled            }
#ssl-disabled        }
    
    
    #Edge Configuration
    #  Change {YOUR_DOMAIN} with your fully qualified domain name. 
    # 5080 and 5443 ports go to edge group
#ssl-disabled    server {
#ssl-disabled            listen 5443 ssl;
#ssl-disabled            ssl_certificate /etc/letsencrypt/live/{{YOUR_DOMAIN}}/fullchain.pem;
#ssl-disabled            ssl_certificate_key /etc/letsencrypt/live/{{YOUR_DOMAIN}}/privkey.pem;
#ssl-disabled            server_name {{YOUR_DOMAIN}};
#ssl-disabled
#ssl-disabled            location / {
#ssl-disabled                proxy_pass http://$edge_backend;
#ssl-disabled                proxy_http_version 1.1;
#ssl-disabled                proxy_connect_timeout 7d;
#ssl-disabled                proxy_send_timeout 7d;
#ssl-disabled                proxy_read_timeout 7d;
#ssl-disabled                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#ssl-disabled                proxy_set_header Host $host;
#ssl-disabled                proxy_set_header Upgrade $http_upgrade;
#ssl-disabled                proxy_set_header Connection "Upgrade";
#ssl-disabled            }
#ssl-disabled        }

    #Dashboard Configuration
    #Change {YOUR_DOMAIN} with your fully qualified domain name. 
#ssl-disabled     server {
#ssl-disabled             listen 4444 ssl;
#ssl-disabled             ssl_certificate /etc/letsencrypt/live/{{YOUR_DOMAIN}}/fullchain.pem;
#ssl-disabled             ssl_certificate_key /etc/letsencrypt/live/{{YOUR_DOMAIN}}/privkey.pem;
#ssl-disabled             server_name {{YOUR_DOMAIN}};
#ssl-disabled 
#ssl-disabled             location / {
#ssl-disabled                 proxy_pass http://antmedia_dashboard;
#ssl-disabled                 proxy_http_version 1.1;
#ssl-disabled                 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#ssl-disabled                 proxy_set_header Host $host;
#ssl-disabled                 proxy_set_header Upgrade $http_upgrade;
#ssl-disabled                 proxy_set_header Connection "Upgrade";
#ssl-disabled             }
#ssl-disabled 	  }

	server {
            listen 4445;
			server_name {{YOUR_DOMAIN}};
			
			location / {
				proxy_pass http://antmedia_dashboard;
				proxy_http_version 1.1;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_set_header Host $host;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "Upgrade";
			}	

        }
    

}