name: Docker Build and Test

on: 
# [push]
  workflow_dispatch:
  schedule:
    - cron: '0 0 */5 * *'

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Show current branch
        run: echo "Current branch is ${{ github.event.inputs.branch_name }}"

      - name: stop the AMS service
        run: sudo systemctl stop antmedia

      - name: Run Docker service
        run: sudo systemctl restart docker

      - name: Build Docker image
        run: docker build -f docker/Dockerfile_Process --network=host -t antmediaserver --build-arg LicenseKey="${{ secrets.ENTERPRISE_LICENSE }}" .

      - name: Run Docker container
        run: docker run --restart=always -d  --name antmedia --network=host -it antmediaserver

      - name: Check if SSL is enabled or not
        run: |
          set -e
          if docker exec antmedia curl -f https://${{ secrets.CI_SSL_TEST_DOMAIN }}:5443; then
            echo "Endpoint is reachable."
            exit 1
          else
            echo "Endpoint is not reachable, but continuing workflow."
          fi

#      - name: Clone branch
#        run: |
#          git clone --depth=1 -b ${{ github.event.inputs.branch_name }} https://github.com/ant-media/Ant-Media-Server.git || git clone --depth=1 https://github.com/ant-media/Ant-Media-Server.git

      - name: Download enable_ssl.sh inside container
        run: docker exec antmedia wget -O /usr/local/antmedia/enable_ssl.sh https://raw.githubusercontent.com/ant-media/Ant-Media-Server/master/src/main/server/enable_ssl.sh    
  
#      - name: Copy enable_ssl.sh from cloned branch to container
#        run: docker cp Ant-Media-Server/src/main/server/enable_ssl.sh antmedia:/usr/local/antmedia/enable_ssl.sh
        
      - name: Run enable_ssl.sh inside container
        run: docker exec antmedia bash /usr/local/antmedia/enable_ssl.sh -d ${{ secrets.CI_SSL_TEST_DOMAIN }}

      - name: Verify container is running
        run: |
          sleep 20
          docker ps -f name=antmedia
          if [ $(docker ps -f name=antmedia --format '{{.Names}}') != "antmedia" ]; then
            echo "Container is not running"
            exit 1
          fi

      - name: Test application
        run: |
          docker exec antmedia curl -f https://${{ secrets.CI_SSL_TEST_DOMAIN }}:5443  
      - name: Stop and remove container
        if: ${{ always() }}
        run: |
          docker stop antmedia
          docker rm antmedia
          sudo systemctl start antmedia
